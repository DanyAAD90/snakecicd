apiVersion: apps/v1
kind: Deployment
metadata:
  name: snakecicd-prod
  namespace: snakecicd-prod
  labels:
    app: snakecicd-prod
spec:
  revisionHistoryLimit: 2
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: snakecicd-prod
  template:
    metadata:
      labels:
        app: snakecicd-prod
      annotations:
        checksum/config: {{ toYaml .Values.highscore | sha256sum }}
    spec:
      initContainers:
        - name: init-copy-highscores
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - cp /config/high_scores.txt /data/high_scores.txt;
          volumeMounts:
            - name: snake-storage
              mountPath: /data
            - name: high-scores-cm-volume
              mountPath: /config
      containers:
        - name: snakecicd-prod
          image: danielzdun/snakecicd:1.{{ .Values.versionapp }}
          ports:
            - containerPort: 80
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 5
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          volumeMounts:
            - name: snake-storage
              mountPath: /data
        - name: highscore-sync #sidecar pod
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
            - |
              while true; do
                cp /config/high_scores.txt /data/high_scores.txt;
                sleep 10;
              done
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          volumeMounts:
            - name: snake-storage
              mountPath: /data
            - name: high-scores-cm-volume
              mountPath: /config
      volumes:
        - name: snake-storage
          persistentVolumeClaim:
            claimName: snakecicd-storage
        - name: high-scores-cm-volume
          configMap:
            name: high-scores-cm
            items:
            - key: high_scores
              path: high_scores.txt
